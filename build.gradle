import org.apache.tools.ant.filters.ReplaceTokens
import aQute.bnd.gradle.Bundle

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

plugins {
    id "com.github.node-gradle.node" version "3.1.0"
    id "biz.aQute.bnd.builder" version "5.0.0"
}

apply plugin: 'java'

ext {
    projectId = 'wnews'
}

processResources {
    filter ReplaceTokens, tokens: [
        "projectName": project.findProperty("projectName") ?: "",
        "projectId": project.findProperty("projectId") ?: "",
        "projectUrl": project.findProperty("projectUrl") ?: "",
        "projectDomain": project.hasProperty("projectUrl") ? (projectUrl =~ /(?:https?:\/\/)(.*)/)[0][1] : "",
        "organization": project.findProperty("organization") ?: "",
        "gaTrackingId": project.findProperty("gaTrackingId") ?: "",
        "disqusShortName": project.findProperty("disqusShortName") ?: "",
        "currentYear": Calendar.instance.get(Calendar.YEAR) as String
    ]
}

jar.enabled = false

node {
    download = true
}

task buildWebpack(type: NpmTask) {
    args = ['run', 'buildWebpack']
}

task bundleApp(type: Bundle) {
    archiveBaseName = "$projectId-app"
    bndfile = 'app.bnd'
    from('theme/app') { into 'SLING-INF/content' }
    from('assets') { into 'assets' }
}

task bundleConfig(type: Bundle) {
    archiveBaseName = "$projectId-config"
    bndfile = 'config.bnd'
    from('config') { into 'SLING-INF/content' }
}

task bundleContent(type: Bundle) {
    archiveBaseName = "$projectId-content"
    bndfile = 'content.bnd'
    from('content') { into 'SLING-INF/content' }
    exclude('**/current.json')
}

bundleApp.dependsOn buildWebpack
buildWebpack.dependsOn yarn
clean.dependsOn yarn_cache_clean

artifacts {
    archives bundleApp
    archives bundleConfig
    archives bundleContent
}
